{
  "env": {
    "browser": true,
    "es6": true,
    "jest": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:css-modules/recommended",
    "plugin:jest-dom/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint",
    "css-modules",
    "prettier",
    "react",
    "react-hooks",
    "import",
    "jest-dom"
  ],
  "rules": {
    "import/order": [
      "error",
      {
        "groups": [
          [
            "external",
            "builtin"
          ],
          "internal",
          [
            "parent",
            "sibling",
            "index"
          ]
        ],
        "newlines-between": "always",
        "pathGroups": [
          {
            "group": "internal",
            "pattern": "@/components/**"
          },
          {
            "group": "internal",
            "pattern": "@/containers/**"
          },
          {
            "group": "internal",
            "pattern": "@/domain/**"
          },
          {
            "group": "internal",
            "pattern": "@/hooks/**"
          },
          {
            "group": "internal",
            "pattern": "@/test/**"
          },
          {
            "group": "internal",
            "pattern": "@/utils/**"
          }
        ],
        "pathGroupsExcludedImportTypes": [
          "builtin"
        ]
      }
    ],
    "react/jsx-curly-brace-presence": [
      "error",
      "never"
    ],
    "react/jsx-fragments": [
      "error",
      "syntax"
    ],
    "react/jsx-sort-props": [
      "error",
      {
        "callbacksLast": true,
        "ignoreCase": false,
        "noSortAlphabetically": false,
        "reservedFirst": false,
        "shorthandFirst": false,
        "shorthandLast": true
      },
    ],
    "react/jsx-uses-react": "off",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react-hooks/exhaustive-deps": "off",
    "react-hooks/rules-of-hooks": "error",
    "@typescript-eslint/explicit-member-accessibility": "off",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "format":[
          "camelCase",
          "PascalCase",
          "UPPER_CASE"
        ],
        "leadingUnderscore": "allow",
        "filter": {
          "regex": "^(_OLD$)$",
          "match": false
        }
      },
      {
        "selector": "typeLike",
        "format": ["PascalCase"]
      },
      {
        "selector": "enum",
        "format": ["PascalCase"]
      },
      {
        "selector": "enumMember",
        "format": ["UPPER_CASE"]
      }
    ],
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "args": "after-used",
        "argsIgnorePattern": "^_",
        "ignoreRestSiblings": true,
        "vars": "all"
      }
    ]
  }
}
